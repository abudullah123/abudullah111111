import matplotlib.pyplot as plt
input_values = [1,2,3,4,5]
squares = [1,4,9,16,25]
plt.plot(input_values,squares,linewidth=5)  #线条粗细
plt.title("Square Numbers",fontsize=24) #设置图表标题，并给坐标轴加上标签
plt.xlabel("Value",fontsize=24)
plt.ylabel("Square of Value",fontsize=14)

plt.tick_params(axis='both',labelsize=14)#设置刻度标记的大小

plt.show()


import matplotlib.pyplot as plt
x_values = list(range(1,1001))
y_values = [x**2 for x in x_values]

plt.scatter(x_values,y_values,c=(0.6,0.9,0.8),edgecolors='none',s=40)
plt.axis([0,1100,0,1100000]) # x,y轴的取值范围

plt.show()


from  random import choice
class RandomWalk():  #一个生成随机漫步数据的类
    def __init__(self,num_points=5000): #初始化随机漫步的属性
        self.num_points = num_points
        self.x_values = [0]  #所以随机漫步都始于(0,0)
        self.y_values = [0]
    def fill_walk(self): #计算随机漫步包含的所有点
        while len(self.x_values) < self.num_points: #不断漫步，直到列表表达到指定的长度
            x_direction = choice([1,-1])
            x_distance = choice([0,1,2,3,4])
            x_step = x_direction * x_distance

            y_direction = choice([1, -1])
            y_distance = choice([0, 1, 2, 3, 4])
            y_step = y_direction * y_distance

            if x_step == 0 and y_step == 0: #拒绝原地踏步
                continue

            next_x = self.x_values[-1] + x_step #计算下一个点的x和y值
            next_y = self.y_values[-1] + y_step

            self.x_values.append(next_x)
            self.y_values.append(next_y)



import matplotlib.pyplot as plt
from random_walk import RandomWalk #创建一个RandomWalk实例，并将包含的点都绘制出来
while True: #只要程序处于活动状态，就不断地模拟随机漫步
    rw = RandomWalk()
    rw.fill_walk()

    point_numbers = list(range(rw.num_points))
    plt.scatter(rw.x_values,rw.y_values,c=point_numbers,
        cmap=plt.cm.Blues,edgecolors='none',s=15)
    #突出起点和终点
    plt.scatter(0,0,c='green',edgecolors='none',s=100)
    plt.scatter(rw.x_values[-1],rw.y_values[-1],c='red',edgecolors='none',s=100)


    plt.axes().get_xaxis().set_visible(False)
    plt.axes().get_yaxis().set_visible(False)
    plt.show()

    keep_running = input("Make another walk?(y/n): ")
    if keep_running == 'n':
        break

import matplotlib.pyplot as plt

x_values = [1,2,3,4,5]
y_values = [1,4,9,16,25]
plt.scatter(x_values,y_values,s=100)
plt.scatter(2,4,s=200)
plt.title("Square Numbers",fontsize=24)
plt.xlabel("Value",fontsize=24)
plt.ylabel("Square of Value",fontsize=14)

#设置刻度标记的大小
plt.tick_params(axis='both',which='major',labelsize=24)
plt.show()


import matplotlib.pyplot as plt
x_values = list(range(1,1001))
y_values = [x**2 for x in x_values]

plt.scatter(x_values,y_values,cmap = plt.cm.Blues,edgecolors='none',s=40)
plt.axis([0,1100,0,1100000]) # x,y轴的取值范围

plt.show()
plt.savefig('squares_plot.png',bbox_inches='tight')

